// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"
	app "user-management/app"

	mock "github.com/stretchr/testify/mock"
)

// HookFunc is an autogenerated mock type for the HookFunc type
type HookFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx, _a1
func (_m *HookFunc) Execute(ctx context.Context, _a1 *app.App) error {
	ret := _m.Called(ctx, _a1)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *app.App) error); ok {
		r0 = rf(ctx, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewHookFunc creates a new instance of HookFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHookFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *HookFunc {
	mock := &HookFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
